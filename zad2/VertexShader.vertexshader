#version 330 core

layout(location = 0) in vec2 vertexPosition_board;
layout(location = 1) in vec3 vertexColor;

uniform float xscale;
uniform float yscale;
uniform float center_x;
uniform float center_y;
uniform float animation_phase;
uniform float alpha;
uniform int animation_mode;
uniform bool reversed;

out vec4 fragmentColor;

void main(){
    gl_Position.x = vertexPosition_board.x * xscale;
    gl_Position.y = vertexPosition_board.y * yscale;

    if(reversed) gl_Position.x *= -1.0f;

    if(animation_mode == 0) gl_Position.x *= cos( animation_phase * 3.14159265358 ); //uncover animation
    if(animation_mode == 1) gl_Position.y *= cos( animation_phase * 3.14159265358 ); //cover animation
    if(animation_mode == 2) ; //wait animation

    gl_Position.z = 0.0;
    gl_Position.w = 1.0;

    gl_Position += vec4(center_x, center_y, 0.0, 0.0);

    fragmentColor = vec4(vertexColor,alpha);
}
